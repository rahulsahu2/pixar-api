extend type Query {
    settings(language: String): Settings
        @field(
            resolver: "Marvel\\GraphQL\\Queries\\SettingsQuery@fetchSettings"
        )
}

type SeoSettings {
    metaTitle: String
    metaDescription: String
    metaTags: String
    canonicalUrl: String
    ogTitle: String
    ogDescription: String
    ogImage: Attachment
    twitterHandle: String
    twitterCardType: String
}
type SettingCurrencyOptions {
    formation: String
    fractions: Int
}

type ContactDetails {
    socials: [ShopSocials]
    contact: String
    location: Location
    website: String
}
input ContactDetailsInput {
    socials: [ShopSocialInput]
    contact: String
    location: LocationInput
    website: String
}

type GoogleSettings {
    isEnable: Boolean
    tagManagerId: String
}
type FacebookSettings {
    isEnable: Boolean
    appId: String
    pageId: String
}

type ServerInfo {
    max_execution_time: String
    max_input_time: String
    memory_limit: String
    post_max_size: Int
    upload_max_filesize: Int
}

type SettingsOptions {
    siteTitle: String
    siteSubtitle: String
    currency: String
    currencyOptions: SettingCurrencyOptions
    useOtp: Boolean
    useGoogleMap: Boolean
    useEnableGateway: Boolean
    useCashOnDelivery: Boolean
    useAi: Boolean
    paymentGateway: [PaymentGateways]
    defaultPaymentGateway: String
    useMustVerifyEmail: Boolean
    isProductReview: Boolean
    contactDetails: ContactDetails
    minimumOrderAmount: Float
    maxShopDistance: Float
    currencyToWalletRatio: Int
    signupPoints: Int
    maximumQuestionLimit: Int
    deliveryTime: [DeliveryTime]
    logo: Attachment
    taxClass: String
    shippingClass: String
    freeShipping: Boolean
    freeShippingAmount: Float
    seo: SeoSettings
    google: GoogleSettings
    facebook: FacebookSettings
    guestCheckout: Boolean
    smsEvent: EventSettings
    emailEvent: EventSettings
    server_info: ServerInfo
    useAi: Boolean
    defaultAi: String
    StripeCardOnly: Boolean
}

type EventSettings {
    customer: Customer
    vendor: Vendor
    admin: Admin
}

type Customer {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
    answerQuestion: Boolean
}

type Vendor {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
    createReview: Boolean
    createQuestion: Boolean
}

type Admin {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
}

type PaymentGateways {
    name: String
    title: String
}

input PaymentGatewaysInput {
    name: String
    title: String
}

type Settings {
    id: ID
    language: String
    options: SettingsOptions
}

input DeliveryTimeInput {
    title: String
    description: String
}

input SettingCurrencyOptionsInput {
    formation: String
    fractions: Int
}

input GoogleSettingsInput {
    isEnable: Boolean
    tagManagerId: String
}
input FacebookSettingsInput {
    isEnable: Boolean
    appId: String
    pageId: String
}

input SeoSettingsInput {
    metaTitle: String
    metaDescription: String
    metaTags: String
    canonicalUrl: String
    ogTitle: String
    ogDescription: String
    ogImage: AttachmentInput
    twitterHandle: String
    twitterCardType: String
}
input CustomerInput {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
    answerQuestion: Boolean
}

input VendorInput {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
    createReview: Boolean
    createQuestion: Boolean
}

input AdminInput {
    statusChangeOrder: Boolean
    refundOrder: Boolean
    paymentOrder: Boolean
}

input EventSettingsInput {
    customer: CustomerInput
    vendor: VendorInput
    admin: AdminInput
}

input ServerInfoInput {
    max_execution_time: String
    max_input_time: String
    memory_limit: String
    post_max_size: Int
    upload_max_filesize: Int
}

input SettingsOptionsInput {
    siteTitle: String
    siteSubtitle: String
    currency: String
    currencyOptions: SettingCurrencyOptionsInput
    useOtp: Boolean
    useGoogleMap: Boolean
    useEnableGateway: Boolean
    useCashOnDelivery: Boolean
    paymentGateway: [PaymentGatewaysInput]
    defaultPaymentGateway: String
    useMustVerifyEmail: Boolean
    isProductReview: Boolean
    contactDetails: ContactDetailsInput
    minimumOrderAmount: Float
    maxShopDistance: Float
    currencyToWalletRatio: Int
    signupPoints: Int
    maximumQuestionLimit: Int
    deliveryTime: [DeliveryTimeInput]
    logo: AttachmentInput
    taxClass: String
    shippingClass: String
    freeShipping: Boolean
    freeShippingAmount: Float
    seo: SeoSettingsInput
    google: GoogleSettingsInput
    facebook: FacebookSettingsInput
    guestCheckout: Boolean
    smsEvent: EventSettingsInput
    emailEvent: EventSettingsInput
    server_info: ServerInfoInput
    useAi: Boolean
    defaultAi: String
    StripeCardOnly: Boolean
}

input SettingsInput {
    language: String!
    options: SettingsOptionsInput
}

extend type Mutation {
    updateSettings(input: SettingsInput! @spread): Settings
        @field(resolver: "SettingsMutator@update")
        @can(ability: "super_admin")
}
